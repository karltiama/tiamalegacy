// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum BookingStatus {
  DRAFT
  PENDING_PAYMENT
  CONFIRMED
  COMPLETED
  CANCELLED
}

enum PaymentStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
  REFUNDED
}

enum PaymentMethod {
  GCASH
  CARD
  BANK_TRANSFER
  CASH_ON_ARRIVAL
}

model Room {
  id          Int      @id @default(autoincrement())
  name        String   @default("Standard Room")
  description String?  @default("Comfortable room for rest stop guests")
  capacity    Int      @default(4) // Max 4 persons
  basePrice12h Decimal @map("base_price_12h") @db.Decimal(10, 2) // 12 hour rate
  basePrice24h Decimal @map("base_price_24h") @db.Decimal(10, 2) // 24 hour rate
  extraAdultPrice Decimal @map("extra_adult_price") @db.Decimal(10, 2) // Extra adult rate
  amenities   String[] @default(["WiFi", "Air Conditioning", "Private Bathroom", "TV"])
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  // Relations
  bookings Booking[]

  @@map("rooms")
}

model Booking {
  id               Int           @id @default(autoincrement())
  bookingReference String        @unique @map("booking_reference")
  guestName        String        @map("guest_name")
  guestEmail       String        @map("guest_email")
  guestPhone       String?       @map("guest_phone")
  checkInDate      DateTime      @map("check_in_date") @db.Date
  duration         Int           @default(12) // 12 or 24 hours
  numberOfAdults   Int           @default(2) @map("number_of_adults")
  numberOfChildren Int           @default(0) @map("number_of_children")
  extraAdults      Int           @default(0) @map("extra_adults")
  totalAmount      Decimal       @map("total_amount") @db.Decimal(10, 2)
  status           BookingStatus @default(DRAFT)
  specialRequests  String?       @map("special_requests")
  paymentMethod    String        @default("CASH_ON_ARRIVAL") @map("payment_method")
  roomId           Int           @map("room_id")
  createdAt        DateTime      @default(now()) @map("created_at")
  updatedAt        DateTime      @updatedAt @map("updated_at")

  // Relations
  room     Room      @relation(fields: [roomId], references: [id], onDelete: Restrict)
  payments Payment[]

  @@index([roomId])
  @@index([checkInDate])
  @@index([status])
  @@map("bookings")
}

model Payment {
  id               Int            @id @default(autoincrement())
  bookingId        Int            @map("booking_id")
  amount           Decimal        @db.Decimal(10, 2)
  currency         String         @default("PHP")
  paymentMethod    PaymentMethod  @map("payment_method")
  status           PaymentStatus  @default(PENDING)
  transactionId    String?        @map("transaction_id")
  paymentReference String?        @map("payment_reference")
  processedAt      DateTime?      @map("processed_at")
  createdAt        DateTime       @default(now()) @map("created_at")
  updatedAt        DateTime       @updatedAt @map("updated_at")

  // Relations
  booking Booking @relation(fields: [bookingId], references: [id], onDelete: Restrict)

  @@index([bookingId])
  @@index([status])
  @@map("payments")
}



